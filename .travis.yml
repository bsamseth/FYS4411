language: cpp
dist: xenial
notifications:
  email: false

cache:
  directories:
    - $TRAVIS_BUILD_DIR/openmpi-build
    - $TRAVIS_BUILD_DIR/openmpi-3.1.3

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - deadsnakes
            - ubuntu-toolchain-r-test
          packages:
            - python3.7-dev
            - g++-7
            - lcov
      env:
        - C_COMPILER="gcc-7", CXX_COMPILER="g++-7"

before_install:
  # Setup Python environemnt
  - pyenv global $(pyenv whence 2to3)
  - pip install pipenv
  # Setup MPI
  - export MPI_BUILD_DIR=$TRAVIS_BUILD_DIR/openmpi-build
  - export MPI_VERSION="3.1"
  - export MPI_FULL_VERSION="3.1.3"
  - source ci/install-openmpi.sh
  - $MPI_CC --version
  - $MPI_CXX --version
  - $MPI_EXEC --version
  # Setup variables for build
  - export CMAKE_C_COMPILER=$C_COMPILER
  - export CMAKE_CXX_COMPILER=$CXX_COMPILER
  - export MPI_C_COMPILER=$MPI_CC
  - export MPI_CXX_COMPILER=$MPI_CXX
  - export MPI_CXX_SKIP_MPICXX=1
  - export CMAKE_BUILD_TYPE=Coverage
  - env MPICC=$MPI_CC pipenv install --skip-lock --dev

install:
  # Build, being super explicit about where to find stuff!
  - mkdir build-py && cd build-py
  - cmake .. -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DMPI_C_COMPILER=$MPI_CC -DMPI_CXX_COMPILER=$MPI_CXX -DMPI_CXX_SKIP_MPICXX=1
  - make -j3
  - cd -

script:
  - pipenv run python setup.py test
  # Check that the tests can run with MPI (if Travis has more than one CPU available).
  - $MPI_EXEC -n 2 build-py/unit_tests.x || $MPI_EXEC -n 1 build-py/unit_tests.x

after_success:
  - lcov --capture --directory . --output-file coverage.info
  - lcov --remove coverage.info '*/tests/*' '/usr/*' '*/external/*' '/Applications/*' --output-file coverage.info # filter system-files
  - lcov --list coverage.info
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

